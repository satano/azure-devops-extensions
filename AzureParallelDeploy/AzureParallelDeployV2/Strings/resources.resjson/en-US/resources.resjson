{
	"loc.friendlyName": "Azure Parallel Deploy",
	"loc.description": "Simplify your pipeline and minimize service deploy time by deploying multiple services to Azure Portal in parallel.",
	"loc.helpMarkDown": "[More information](https://github.com/satano/azure-devops-extensions/tree/master/AzureParallelDeploy#azure-parallel-deploy-task)",
	"loc.instanceNameFormat": "Deploy services",
	"loc.input.label.ConnectedServiceName": "Azure subscription",
	"loc.input.help.ConnectedServiceName": "Azure resource manager subscription for the deployment.",
	"loc.input.label.ResourceGroup": "Resource group",
	"loc.input.help.ResourceGroup": "Resource group name in Azure Portal.",
	"loc.input.label.AppType": "Application type",
	"loc.input.help.AppType": "Type of deployed applications. All deployed applications must be of the same type. The value is either `WebApp` or `FunctionApp`. If the value is not set or is invalid, `WebApp` is used.",
	"loc.input.label.Services": "Services",
	"loc.input.help.Services": "Comma separated values of logical service names. These names are used for generating real service names in Azure Portal and names of source ZIP files.",
	"loc.input.label.AppNameFormat": "Azure application name format string",
	"loc.input.help.AppNameFormat": "Format string for app service name in Azure Portal. Format string accepts one parameter `{0}`, which will be replaced by the logical name of the service. For example if format string is `prod-{0}-api` and logical service name is `forecast`, the application will be deployed to `prod-forecast-api` app service. If the value is not set, `{0}` format string will be used (the name of the service in Azure Portal is the same as logical service name).",
	"loc.input.label.AppSourceFormat": "Application source file format string",
	"loc.input.help.AppSourceFormat": "Format string for path to source ZIP files for services. Every service is deployed from single ZIP file. The format string accepts one parameter `{0}`, which will be replace by the logical name of the service. For example if format string is `{0}-api.zip` and logical service name is `forecast`, source file name will be `forecast-api.zip`. `zip` extension must be specified expplicitly. If the value is not set, `{0}.zip` format string will be used (source file name is the same as logical service name with `zip` extension)",
	"loc.input.label.AppSourceBasePath": "Applications' sources base path",
	"loc.input.help.AppSourceBasePath": "Base path for services' source files. Service source zip file is searched recursively in this folder. If the value is not set, the default value is used based on the build type. If it is general build, `Build.StagingDirectory` value is used. If it is any other build type (release, deployment...) `System.DefaultWorkingDirectory` is used. Build type is determined by the `System.HostType` variable.",
	"loc.input.label.SlotName": "Slot name",
	"loc.input.help.SlotName": "The name of the slot for deployment. The slot name is used for all deployed services.",
	"loc.messages.AuthSchemeNotSupported": "Auth Scheme %s is not supported",
	"loc.messages.AzureSDKNotFound": "Azure CLI 2.x is not installed on this machine.",
	"loc.messages.ErrorInSettingUpSubscription": "Error in setting up subscription",
	"loc.messages.FailedToLogout": "The following error occurred while logging out: %s",
	"loc.messages.GlobalCliConfigAgentVersionWarning": "For agent version < 2.115.0, only global Azure CLI configuration can be used",
	"loc.messages.LoginFailed": "Azure login failed",
	"loc.messages.MSILoginFailed": "Azure login failed using Managed Service Identity",
	"loc.messages.ScriptFailed": "Script failed with error: %s",
	"loc.messages.SettingAzureCloud": "Setting active cloud to: %s",
	"loc.messages.SettingAzureConfigDir": "Setting AZURE_CONFIG_DIR env variable to: %s",
	"loc.messages.DeployingServices": "Deploying services.",
	"loc.messages.DeployingServicesBaseFolder": "Base folder for services' source files: '%s'",
	"loc.messages.DeployingServiceStart": "Started deploying service '%s'.",
	"loc.messages.DeployingServiceFilename": "  Service source filename: '%s'",
	"loc.messages.DeployingServiceAzureName": "  Azure service name: '%s'",
	"loc.messages.DeployingServiceNoSourceFile": "Did not find source file '%s' for service '%s'.",
	"loc.messages.DeployingServiceMoreSourceFiles": "Found more than one source file '%s' for service '%s'.",
	"loc.messages.DeployingServiceUsingSourceFile": "Using source file: '%s'",
	"loc.messages.DeployingServiceOk": "Service is deployed.",
	"loc.messages.DeployingServiceError": "Failed to deploy service.",
	"loc.messages.InitializingSettings": "Initializing settings...",
	"loc.messages.SettingsUsingDefaultValue": "(parameter not set, using default value)",
	"loc.messages.SettingsUsingStagingDirectory": "(parameter not set, 'System.HostType' is '%s' so using 'Build.StagingDirectory')",
	"loc.messages.SettingsUsingDefaultWorkingDirectory": "(parameter not set, 'System.HostType' is '%s' so using 'System.DefaultWorkingDirectory')",
	"loc.messages.SyncFunctionTriggersInvoking": "Invoking 'SyncFunctionTriggers' action.",
	"loc.messages.SyncFunctionTriggersNotInvoking": "'SyncFunctionTriggers' action will not be invoked, because not all services were deployed.",
	"loc.messages.SyncFunctionTriggersFailed": "Sync function triggers action failed.",
	"loc.messages.SyncFunctionTriggersSucceeded": "Sync function triggers action invoked successfully.",
	"loc.messages.TaskResultFailed": "Services were not deployed.",
	"loc.messages.TaskResultSucceeded": "All services were deployed."
}
